control_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="AMC.bracket=high"))
LasVegas_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="LasVegas.bracket=high"))
Grubhub_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="Grubhub.bracket=high"))
Zoom_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="Zoom.bracket=high"))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
#inspect(head(sort(LasVegas_good, by = "lift"), 10))
inspect(head(sort(Grubhub_good, by = "lift"), 10))
inspect(head(sort(Zoom_good, by = "lift"), 10))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
#inspect(head(sort(LasVegas_good, by = "lift"), 10))
inspect(head(sort(Grubhub_good, by = "lift"), 5))
inspect(head(sort(Zoom_good, by = "lift"), 5))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
#inspect(head(sort(LasVegas_good, by = "lift"), 10))
#inspect(head(sort(Grubhub_good, by = "lift"), 5))
inspect(head(sort(Zoom_good, by = "confidence"), 5))
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="AMC.bracket=high"))
LasVegas_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="LasVegas.bracket=high"))
Grubhub_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="Grubhub.bracket=high"))
Zoom_good <- apriori(data=Allfactordata, parameter=list (supp=0.005,conf = 0.4), appearance = list (rhs="Zoom.bracket=high"))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
#inspect(head(sort(LasVegas_good, by = "lift"), 10))
#inspect(head(sort(Grubhub_good, by = "lift"), 5))
inspect(head(sort(Zoom_good, by = "confidence"), 5))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
#inspect(head(sort(LasVegas_good, by = "lift"), 10))
inspect(head(sort(Grubhub_good, by = "lift"), 5))
#inspect(head(sort(Zoom_good, by = "confidence"), 5))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
#inspect(head(sort(LasVegas_good, by = "lift"), 10))
inspect(head(sort(Grubhub_good, by = "confidence"), 5))
#inspect(head(sort(Zoom_good, by = "confidence"), 5))
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="AMC.bracket=high"))
LasVegas_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="LasVegas.bracket=high"))
Grubhub_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="Grubhub.bracket=high"))
Zoom_good <- apriori(data=Allfactordata, parameter=list (supp=0.005,conf = 0.4), appearance = list (rhs="Zoom.bracket=high"))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
#inspect(head(sort(LasVegas_good, by = "lift"), 10))
inspect(head(sort(Grubhub_good, by = "confidence"), 5))
#inspect(head(sort(Zoom_good, by = "confidence"), 5))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
#inspect(head(sort(LasVegas_good, by = "lift"), 10))
inspect(head(sort(Grubhub_good, by = "support"), 5))
#inspect(head(sort(Zoom_good, by = "confidence"), 5))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
#inspect(head(sort(LasVegas_good, by = "lift"), 10))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
inspect(head(sort(Zoom_good, by = "support"), 5))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
inspect(head(sort(LasVegas_good, by = "support"), 5))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
#inspect(head(sort(Zoom_good, by = "support"), 5))
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="AMC.bracket=high"))
LasVegas_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="LasVegas.bracket=high"))
Grubhub_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="Grubhub.bracket=high"))
Zoom_good <- apriori(data=Allfactordata, parameter=list (supp=0.005,conf = 0.4), appearance = list (rhs="Zoom.bracket=high"))
#inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "lift"), 10))
inspect(head(sort(LasVegas_good, by = "support"), 5))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
#inspect(head(sort(Zoom_good, by = "support"), 5))
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="AMC.bracket=high"))
LasVegas_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="LasVegas.bracket=high"))
Grubhub_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="Grubhub.bracket=high"))
Zoom_good <- apriori(data=Allfactordata, parameter=list (supp=0.005,conf = 0.4), appearance = list (rhs="Zoom.bracket=high"))
#inspect(head(sort(control_good, by = "lift"), 10))
inspect(head(sort(AMC_good, by = "support"), 10))
#inspect(head(sort(LasVegas_good, by = "support"), 5))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
#inspect(head(sort(Zoom_good, by = "support"), 5))
#inspect(head(sort(control_good, by = "lift"), 10))
inspect(head(sort(AMC_good, by = "support"), 5))
#inspect(head(sort(LasVegas_good, by = "support"), 5))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
#inspect(head(sort(Zoom_good, by = "support"), 5))
inspect(head(sort(control_good, by = "lift"), 10))
#inspect(head(sort(AMC_good, by = "support"), 5))
#inspect(head(sort(LasVegas_good, by = "support"), 5))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
#inspect(head(sort(Zoom_good, by = "support"), 5))
inspect(head(sort(control_good, by = "support"), 5))
#inspect(head(sort(AMC_good, by = "support"), 5))
#inspect(head(sort(LasVegas_good, by = "support"), 5))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
#inspect(head(sort(Zoom_good, by = "support"), 5))
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="AMC.bracket=high"))
LasVegas_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="LasVegas.bracket=high"))
Grubhub_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="Grubhub.bracket=high"))
Zoom_good <- apriori(data=Allfactordata, parameter=list (supp=0.005,conf = 0.4), appearance = list (rhs="Zoom.bracket=high"))
inspect(head(sort(control_good, by = "support"), 5))
#inspect(head(sort(AMC_good, by = "support"), 5))
#inspect(head(sort(LasVegas_good, by = "support"), 5))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
#inspect(head(sort(Zoom_good, by = "support"), 5))
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="AMC.bracket=high"))
LasVegas_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="LasVegas.bracket=high"))
Grubhub_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="Grubhub.bracket=high"))
Zoom_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="Zoom.bracket=high"))
inspect(head(sort(control_good, by = "support"), 5))
#inspect(head(sort(AMC_good, by = "support"), 5))
#inspect(head(sort(LasVegas_good, by = "support"), 5))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
inspect(head(sort(Zoom_good, by = "support"), 5))
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="AMC.bracket=high"))
AMC_bad <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="AMC.bracket=low"))
LasVegas_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="LasVegas.bracket=high"))
Grubhub_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="Grubhub.bracket=high"))
Zoom_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="Zoom.bracket=high"))
#inspect(head(sort(control_good, by = "support"), 5))
#inspect(head(sort(AMC_good, by = "support"), 5))
inspect(head(sort(AMC_bad, by = "support"), 5))
#inspect(head(sort(LasVegas_good, by = "support"), 5))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
#inspect(head(sort(Zoom_good, by = "support"), 5))
#inspect(head(sort(control_good, by = "support"), 5))
inspect(head(sort(AMC_good, by = "support"), 5))
inspect(head(sort(AMC_bad, by = "support"), 5))
#inspect(head(sort(LasVegas_good, by = "support"), 5))
#inspect(head(sort(Grubhub_good, by = "support"), 5))
#inspect(head(sort(Zoom_good, by = "support"), 5))
fatalityRate_graph<-ggplot(uscovid, aes(x=Date,y=fatalityRate))+ geom_line(colour="red")+scale_x_date(breaks = date_breaks("1 month"), labels=date_format("%b"))
positiveRate_graph<-ggplot(uscovid, aes(x=Date,y=positiveRate))+ geom_line(colour="blue")+scale_x_date(breaks = date_breaks("1 month"), labels=date_format("%b"))
recoveryRate_graph<-ggplot(uscovid, aes(x=Date,y=recoveryRate))+ geom_line(colour="green")+scale_x_date(breaks = date_breaks("1 month"), labels=date_format("%b"))
grid.arrange(fatalityRate_graph, positiveRate_graph,recoveryRate_graph)
uscovid$dailyLevel.bracket<-discretize(uscovid$dailylevelnum, method = "frequency",breaks = 3,labels = c("bad","fine","good"))
uscovid$fatalityLevel.bracket<-discretize(uscovid$fatalityRate, method = "frequency",breaks = 3,labels = c("low","medium","high"))
uscovid$positiveLevel.bracket<-discretize(uscovid$positiveRate, method = "frequency",breaks = 3,labels = c("low","medium","high"))
uscovid$recoveryLevel.bracket<-discretize(uscovid$recoveryRate, method = "frequency",breaks = 3,labels = c("low","medium","high"))
dailyLeveLnum_graph<-ggplot(uscovid, aes(x=Date, y=dailylevelnum, color=dailyLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
fatalityLevel_graph<-ggplot(uscovid, aes(x=Date, y=fatalityRate, color=fatalityLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
positiveLevel_graph<-ggplot(uscovid, aes(x=Date, y=positiveRate, color=positiveLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
recoveryLevel_graph<-ggplot(uscovid, aes(x=Date, y=recoveryRate, color=recoveryLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
grid.arrange(dailyLeveLnum_graph, fatalityLevel_graph,positiveLevel_graph,recoveryLevel_graph)
wrost_condition<-uscovid %>% filter(uscovid$dailyLevel.bracket == "bad"&uscovid$fatalityLevel.bracket=="high"&uscovid$positiveLevel.bracket=="high"&uscovid$recoveryLevel.bracket=="low")
show(wrost_condition$Date)
wroststart.date = as.Date("2020-05-11")
wrostend.date   = as.Date("2020-06-11")
rule_uscovid<-subset(uscovid, select = c("dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
rule_uscovid_rules<- apriori(rule_uscovid, parameter = list(support = 0.01, confidence = 0.5))
dailyLevel_good <- apriori(data=rule_uscovid, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="dailyLevel.bracket=good"))
dailyLevel_bad <- apriori(data=rule_uscovid, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="dailyLevel.bracket=bad"))
##show(rule_uscovid)
rule_uscovid<-subset(uscovid, select = c("dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
rule_uscovid_rules<- apriori(rule_uscovid, parameter = list(support = 0.01, confidence = 0.5))
dailyLevel_good <- apriori(data=rule_uscovid, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="dailyLevel.bracket=good"))
dailyLevel_bad <- apriori(data=rule_uscovid, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="dailyLevel.bracket=bad"))
##show(rule_uscovid)
#inspect(head(sort(rule_uscovid_rules, by = "confidence"), 3))
inspect(head(sort(dailyLevel_good , by = "support"), 5))
inspect(head(sort(dailyLevel_bad , by = "support"), 5))
#inspect(head(sort(rule_uscovid_rules, by = "confidence"), 3))
inspect(head(sort(dailyLevel_good , by = "confidence"), 5))
inspect(head(sort(dailyLevel_bad , by = "confidence"), 5))
rule_uscovid<-subset(uscovid, select = c("dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
rule_uscovid_rules<- apriori(rule_uscovid, parameter = list(support = 0.01, confidence = 0.5))
dailyLevel_good <- apriori(data=rule_uscovid, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="dailyLevel.bracket=good"))
dailyLevel_bad <- apriori(data=rule_uscovid, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="dailyLevel.bracket=bad"))
##show(rule_uscovid)
#inspect(head(sort(rule_uscovid_rules, by = "confidence"), 3))
inspect(head(sort(dailyLevel_good , by = "confidence"), 5))
inspect(head(sort(dailyLevel_bad , by = "confidence"), 5))
#inspect(head(sort(rule_uscovid_rules, by = "confidence"), 3))
inspect(head(sort(dailyLevel_good , by = "support"), 3))
inspect(head(sort(dailyLevel_bad , by = "support"), 3))
#inspect(head(sort(rule_uscovid_rules, by = "confidence"), 3))
inspect(head(sort(dailyLevel_good , by = "support"), 3))
inspect(head(sort(dailyLevel_bad , by = "support"), 3))
rule_uscovid<-subset(uscovid, select = c("dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
rule_uscovid_rules<- apriori(rule_uscovid, parameter = list(support = 0.01, confidence = 0.5))
dailyLevel_good <- apriori(data=rule_uscovid, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="dailyLevel.bracket=good"))
dailyLevel_bad <- apriori(data=rule_uscovid, parameter=list (supp=0.001,conf = 0.08), appearance = list (rhs="dailyLevel.bracket=bad"))
##show(rule_uscovid)
#inspect(head(sort(rule_uscovid_rules, by = "confidence"), 3))
inspect(head(sort(dailyLevel_good , by = "support"), 3))
inspect(head(sort(dailyLevel_bad , by = "support"), 3))
rule_uscovid<-subset(uscovid, select = c("dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
rule_uscovid_rules<- apriori(rule_uscovid, parameter = list(support = 0.01, confidence = 0.5))
dailyLevel_good <- apriori(data=rule_uscovid, parameter=list (support=0.01,conf = 0.8), appearance = list (rhs="dailyLevel.bracket=good"))
dailyLevel_bad <- apriori(data=rule_uscovid, parameter=list (support=0.01,conf = 0.8), appearance = list (rhs="dailyLevel.bracket=bad"))
##show(rule_uscovid)
#inspect(head(sort(rule_uscovid_rules, by = "confidence"), 3))
inspect(head(sort(dailyLevel_good , by = "support"), 3))
inspect(head(sort(dailyLevel_bad , by = "support"), 3))
#inspect(head(sort(rule_uscovid_rules, by = "confidence"), 3))
inspect(head(sort(dailyLevel_good , by = "support"), 3))
inspect(head(sort(dailyLevel_bad , by = "lift"), 3))
#inspect(head(sort(rule_uscovid_rules, by = "confidence"), 3))
inspect(head(sort(dailyLevel_good , by = "lift"), 3))
inspect(head(sort(dailyLevel_bad , by = "lift"), 3))
uscovid$dailyLevel.bracket<-discretize(uscovid$dailylevelnum, method = "frequency",breaks = 3,labels = c("bad","fine","good"))
uscovid$fatalityLevel.bracket<-discretize(uscovid$fatalityRate, method = "frequency",breaks = 3,labels = c("low","medium","high"))
uscovid$positiveLevel.bracket<-discretize(uscovid$positiveRate, method = "frequency",breaks = 3,labels = c("low","medium","high"))
uscovid$recoveryLevel.bracket<-discretize(uscovid$recoveryRate, method = "frequency",breaks = 3,labels = c("low","medium","high"))
dailyLeveLnum_graph<-ggplot(uscovid, aes(x=Date, y=dailylevelnum, color=dailyLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
fatalityLevel_graph<-ggplot(uscovid, aes(x=Date, y=fatalityRate, color=fatalityLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
positiveLevel_graph<-ggplot(uscovid, aes(x=Date, y=positiveRate, color=positiveLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
recoveryLevel_graph<-ggplot(uscovid, aes(x=Date, y=recoveryRate, color=recoveryLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
grid.arrange(dailyLeveLnum_graph, fatalityLevel_graph,positiveLevel_graph,recoveryLevel_graph)
uscovid
uscovid$dailyLevel.bracket<-discretize(uscovid$dailylevelnum, method = "frequency",breaks = 3,labels = c("good","fine","bad"))
uscovid$fatalityLevel.bracket<-discretize(uscovid$fatalityRate, method = "frequency",breaks = 3,labels = c("low","medium","high"))
uscovid$positiveLevel.bracket<-discretize(uscovid$positiveRate, method = "frequency",breaks = 3,labels = c("low","medium","high"))
uscovid$recoveryLevel.bracket<-discretize(uscovid$recoveryRate, method = "frequency",breaks = 3,labels = c("low","medium","high"))
dailyLeveLnum_graph<-ggplot(uscovid, aes(x=Date, y=dailylevelnum, color=dailyLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
fatalityLevel_graph<-ggplot(uscovid, aes(x=Date, y=fatalityRate, color=fatalityLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
positiveLevel_graph<-ggplot(uscovid, aes(x=Date, y=positiveRate, color=positiveLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
recoveryLevel_graph<-ggplot(uscovid, aes(x=Date, y=recoveryRate, color=recoveryLevel.bracket)) + geom_line()+scale_x_date(breaks = date_breaks("2 months"), labels=date_format("%b"))
grid.arrange(dailyLeveLnum_graph, fatalityLevel_graph,positiveLevel_graph,recoveryLevel_graph)
uscovid
uscovid
View(uscovid)
View(uscovid)
rule_uscovid<-subset(uscovid, select = c("dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
rule_uscovid_rules<- apriori(rule_uscovid, parameter = list(support = 0.01, confidence = 0.5))
dailyLevel_good <- apriori(data=rule_uscovid, parameter=list (support=0.01,conf = 0.8), appearance = list (rhs="dailyLevel.bracket=good"))
dailyLevel_bad <- apriori(data=rule_uscovid, parameter=list (support=0.01,conf = 0.8), appearance = list (rhs="dailyLevel.bracket=bad"))
##show(rule_uscovid)
#inspect(head(sort(rule_uscovid_rules, by = "confidence"), 3))
inspect(head(sort(dailyLevel_good , by = "lift"), 3))
inspect(head(sort(dailyLevel_bad , by = "lift"), 3))
AMC_graph<-ggplot(AMC, aes(x=Date,y=Price))+ geom_line(colour="red")+ggtitle("AMC")+scale_x_date(breaks = date_breaks("1 months"), labels=date_format("%b"))
Grubhub_graph<-ggplot(Grubhub, aes(x=Date,y=Price))+ geom_line(colour="blue")+ggtitle("Grubhub")+scale_x_date(breaks = date_breaks("1 months"), labels=date_format("%b"))
LasVegas_graph<-ggplot(LasVegas, aes(x=Date,y=Price))+ geom_line(colour="green")+ggtitle("Las Vegas Sands")+scale_x_date(breaks = date_breaks("1 months"), labels=date_format("%b"))
zoom_graph<-ggplot(zoom, aes(x=Date,y=Price))+ geom_line(colour="black")+ggtitle("Zoom")+scale_x_date(breaks = date_breaks("1 months"), labels=date_format("%b"))
grid.arrange(AMC_graph, Grubhub_graph,LasVegas_graph,zoom_graph)
modify_AMC <- read.csv("~/Desktop/daidai final/Qian Feng project/modify/modify_AMC.csv")
modify_Grubhub <- read.csv("~/Desktop/daidai final/Qian Feng project/modify/modify_Grubhub.csv")
modify_LasVegas <- read.csv("~/Desktop/daidai final/Qian Feng project/modify/modify_LasVegas.csv")
modify_zoom <- read.csv("~/Desktop/daidai final/Qian Feng project/modify/modify_zoom.csv")
AMC<- na.omit(modify_AMC)
AMC$Date<-as.Date(AMC$Date,"%m/%d/%y")
Grubhub<- na.omit(modify_Grubhub)
Grubhub$Date<-as.Date(Grubhub$Date,"%m/%d/%y")
LasVegas<- na.omit(modify_LasVegas)
LasVegas$Date<-as.Date(LasVegas$Date,"%m/%d/%y")
zoom<- na.omit(modify_zoom)
zoom$Date<-as.Date(zoom$Date,"%m/%d/%y")
AMC_graph<-ggplot(AMC, aes(x=Date,y=Price))+ geom_line(colour="red")+ggtitle("AMC")+scale_x_date(breaks = date_breaks("1 months"), labels=date_format("%b"))
Grubhub_graph<-ggplot(Grubhub, aes(x=Date,y=Price))+ geom_line(colour="blue")+ggtitle("Grubhub")+scale_x_date(breaks = date_breaks("1 months"), labels=date_format("%b"))
LasVegas_graph<-ggplot(LasVegas, aes(x=Date,y=Price))+ geom_line(colour="green")+ggtitle("Las Vegas Sands")+scale_x_date(breaks = date_breaks("1 months"), labels=date_format("%b"))
zoom_graph<-ggplot(zoom, aes(x=Date,y=Price))+ geom_line(colour="black")+ggtitle("Zoom")+scale_x_date(breaks = date_breaks("1 months"), labels=date_format("%b"))
grid.arrange(AMC_graph, Grubhub_graph,LasVegas_graph,zoom_graph)
AMC_filtered = data=AMC %>% filter(Date >= wroststart.date & Date <= wrostend.date)
Grubhub_filtered = data=Grubhub %>% filter(Date >= wroststart.date & Date <= wrostend.date)
LasVegas_filtered = data=LasVegas %>% filter(Date >= wroststart.date & Date <= wrostend.date)
zoom_filtered = data=zoom %>% filter(Date >= wroststart.date & Date <= wrostend.date)
AMC_wrost<-ggplot(AMC_filtered, aes(x=Date,y=Price))+ geom_line(colour="black")+ggtitle("AMC in wrost covid19 period")+scale_x_date(breaks = date_breaks("1 day"), labels=date_format("%b%d"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Grubhub_wrost<-ggplot(Grubhub_filtered, aes(x=Date,y=Price))+ geom_line(colour="black")+ggtitle("Grubhub in wrost covid19 period")+scale_x_date(breaks = date_breaks("1 day"), labels=date_format("%b%d"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
LasVegas_wrost<-ggplot(LasVegas_filtered, aes(x=Date,y=Price))+ geom_line(colour="black")+ggtitle("Las Vegas Sands in wrost covid19 period")+scale_x_date(breaks = date_breaks("1 day"), labels=date_format("%b%d"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
zoom_wrost<-ggplot(zoom_filtered, aes(x=Date,y=Price))+ geom_line(colour="black")+ggtitle("Zoom in wrost covid19 period")+scale_x_date(breaks = date_breaks("1 day"), labels=date_format("%b%d"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
grid.arrange(AMC_wrost, Grubhub_wrost,LasVegas_wrost,zoom_wrost)
AMC$Price.bracket<-discretize(AMC$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
Grubhub$Price.bracket<-discretize(Grubhub$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
LasVegas$Price.bracket<-discretize(LasVegas$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
zoom$Price.bracket<-discretize(zoom$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
AMC
Grubhub
LasVegas
zoom
rule_uscovidwithTime<-subset(uscovid, select = c("Date","dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
write.csv(rule_uscovidwithTime,"rule_uscovidwithTime.csv", row.names = FALSE)
write.csv(AMC,"AMCedit.csv", row.names = FALSE)
write.csv(Grubhub,"Grubhubedit.csv", row.names = FALSE)
write.csv(LasVegas,"LasVegasedit.csv", row.names = FALSE)
write.csv(zoom,"zoomedit.csv", row.names = FALSE)
rule_uscovidwithTime<-subset(uscovid, select = c("Date","dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
write.csv(rule_uscovidwithTime,"rule_uscovidwithTime.csv", row.names = FALSE)
write.csv(AMC,"AMCedit.csv", row.names = FALSE)
write.csv(Grubhub,"Grubhubedit.csv", row.names = FALSE)
write.csv(LasVegas,"LasVegasedit.csv", row.names = FALSE)
write.csv(zoom,"zoomedit.csv", row.names = FALSE)
rule_uscovidwithTimenew <- read.csv("~/Desktop/daidai final/Final/rule_uscovidwithTimenew.csv")
Allfactordata<- na.omit(rule_uscovidwithTimenew)
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
Allfactordata$Grubhub.bracket <- as.factor(Allfactordata$Grubhub.bracket)
Allfactordata$AMC.bracket <- as.factor(Allfactordata$AMC.bracket)
Allfactordata$Zoom.bracket <- as.factor(Allfactordata$Zoom.bracket)
wrost_condition<-uscovid %>% filter(uscovid$dailyLevel.bracket == "bad"&uscovid$fatalityLevel.bracket=="high"&uscovid$positiveLevel.bracket=="high"&uscovid$recoveryLevel.bracket=="low")
show(wrost_condition$Date)
wroststart.date = as.Date("2020-05-11")
wrostend.date   = as.Date("2020-06-11")
wrost_condition<-uscovid %>% filter(uscovid$dailyLevel.bracket == "bad"&uscovid$fatalityLevel.bracket=="high"&uscovid$positiveLevel.bracket=="high"&uscovid$recoveryLevel.bracket=="low")
show(wrost_condition$Date)
wroststart.date = as.Date("2020-04-11")
wrostend.date   = as.Date("2020-05-11")
AMC_filtered = data=AMC %>% filter(Date >= wroststart.date & Date <= wrostend.date)
Grubhub_filtered = data=Grubhub %>% filter(Date >= wroststart.date & Date <= wrostend.date)
LasVegas_filtered = data=LasVegas %>% filter(Date >= wroststart.date & Date <= wrostend.date)
zoom_filtered = data=zoom %>% filter(Date >= wroststart.date & Date <= wrostend.date)
AMC_wrost<-ggplot(AMC_filtered, aes(x=Date,y=Price))+ geom_line(colour="black")+ggtitle("AMC in wrost covid19 period")+scale_x_date(breaks = date_breaks("1 day"), labels=date_format("%b%d"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
Grubhub_wrost<-ggplot(Grubhub_filtered, aes(x=Date,y=Price))+ geom_line(colour="black")+ggtitle("Grubhub in wrost covid19 period")+scale_x_date(breaks = date_breaks("1 day"), labels=date_format("%b%d"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
LasVegas_wrost<-ggplot(LasVegas_filtered, aes(x=Date,y=Price))+ geom_line(colour="black")+ggtitle("Las Vegas Sands in wrost covid19 period")+scale_x_date(breaks = date_breaks("1 day"), labels=date_format("%b%d"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
zoom_wrost<-ggplot(zoom_filtered, aes(x=Date,y=Price))+ geom_line(colour="black")+ggtitle("Zoom in wrost covid19 period")+scale_x_date(breaks = date_breaks("1 day"), labels=date_format("%b%d"))+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
grid.arrange(AMC_wrost, Grubhub_wrost,LasVegas_wrost,zoom_wrost)
AMC$Price.bracket<-discretize(AMC$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
Grubhub$Price.bracket<-discretize(Grubhub$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
LasVegas$Price.bracket<-discretize(LasVegas$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
zoom$Price.bracket<-discretize(zoom$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
rule_uscovidwithTime<-subset(uscovid, select = c("Date","dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
write.csv(rule_uscovidwithTime,"rule_uscovidwithTime.csv", row.names = FALSE)
write.csv(AMC,"AMCedit.csv", row.names = FALSE)
write.csv(Grubhub,"Grubhubedit.csv", row.names = FALSE)
write.csv(LasVegas,"LasVegasedit.csv", row.names = FALSE)
write.csv(zoom,"zoomedit.csv", row.names = FALSE)
rule_uscovidwithTimenew <- read.csv("~/Desktop/daidai final/Final/rule_uscovidwithTimenew.csv")
Allfactordata<- na.omit(rule_uscovidwithTimenew)
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
rule_uscovidwithTimenew <- read.csv("~/Desktop/daidai final/Final/rule_uscovidwithTimenew.csv")
Allfactordata<- na.omit(rule_uscovidwithTimenew)
Allfactordata
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
#Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
Allfactordata$Grubhub.bracket <- as.factor(Allfactordata$Grubhub.bracket)
rule_uscovidwithTimenew <- read.csv("~/Desktop/daidai final/Final/rule_uscovidwithTimenew.csv")
Allfactordata<- na.omit(rule_uscovidwithTimenew)
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
Allfactordata$Grubhub.bracket <- as.factor(Allfactordata$Grubhub.bracket)
Allfactordata$AMC.bracket <- as.factor(Allfactordata$AMC.bracket)
Allfactordata$Zoom.bracket <- as.factor(Allfactordata$Zoom.bracket)
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="AMC.bracket=high"))
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
Allfactordata$Grubhub.bracket <- as.factor(Allfactordata$Grubhub.bracket)
Allfactordata$AMC.bracket <- as.factor(Allfactordata$AMC.bracket)
Allfactordata$Zoom.bracket <- as.factor(Allfactordata$Zoom.bracket)
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="AMC.bracket=high"))
Allfactordata
rule_uscovidwithTimenew <- read.csv("~/Desktop/daidai final/Final/rule_uscovidwithTimenew.csv")
Allfactordata<- na.omit(rule_uscovidwithTimenew)
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
Allfactordata$Grubhub.bracket <- as.factor(Allfactordata$Grubhub.bracket)
Allfactordata$AMC.bracket <- as.factor(Allfactordata$AMC.bracket)
Allfactordata$Zoom.bracket <- as.factor(Allfactordata$Zoom.bracket)
Allfactordata
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
#control_bad <- apriori(data=Allfactordata, parameter=list (supp=0.001,conf = 0.08), appearance = list (lhs=c("dailyLevel.bracket=bad","fatalityLevel.bracket=high","positiveLevel.bracket=high","recoveryLevel.bracket=low")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="AMC.bracket=high"))
Allfactordata
rule_uscovidwithTime<-subset(uscovid, select = c("Date","dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
write.csv(rule_uscovidwithTime,"rule_uscovidwithTime.csv", row.names = FALSE)
write.csv(AMC,"AMCedit.csv", row.names = FALSE)
write.csv(Grubhub,"Grubhubedit.csv", row.names = FALSE)
write.csv(LasVegas,"LasVegasedit.csv", row.names = FALSE)
write.csv(zoom,"zoomedit.csv", row.names = FALSE)
rule_uscovidwithTimenew <- read.csv("~/Desktop/daidai final/Final/rule_uscovidwithTimenew.csv")
Allfactordata<- na.omit(rule_uscovidwithTimenew)
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
Allfactordata$Grubhub.bracket <- as.factor(Allfactordata$Grubhub.bracket)
Allfactordata$AMC.bracket <- as.factor(Allfactordata$AMC.bracket)
Allfactordata$Zoom.bracket <- as.factor(Allfactordata$Zoom.bracket)
Allfactordata
AMC$Price.bracket<-discretize(AMC$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
Grubhub$Price.bracket<-discretize(Grubhub$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
LasVegas$Price.bracket<-discretize(LasVegas$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
zoom$Price.bracket<-discretize(zoom$Price, method = "frequency",breaks = 3,labels = c("low","medium","high"))
rule_uscovidwithTime<-subset(uscovid, select = c("Date","dailyLevel.bracket","fatalityLevel.bracket", "positiveLevel.bracket","recoveryLevel.bracket"))
write.csv(rule_uscovidwithTime,"rule_uscovidwithTime.csv", row.names = FALSE)
write.csv(AMC,"AMCedit.csv", row.names = FALSE)
write.csv(Grubhub,"Grubhubedit.csv", row.names = FALSE)
write.csv(LasVegas,"LasVegasedit.csv", row.names = FALSE)
write.csv(zoom,"zoomedit.csv", row.names = FALSE)
rule_uscovidwithTimenew <- read.csv("~/Desktop/daidai final/Final/rule_uscovidwithTimenew.csv")
Allfactordata<- na.omit(rule_uscovidwithTimenew)
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
Allfactordata$Grubhub.bracket <- as.factor(Allfactordata$Grubhub.bracket)
Allfactordata$AMC.bracket <- as.factor(Allfactordata$AMC.bracket)
Allfactordata$Zoom.bracket <- as.factor(Allfactordata$Zoom.bracket)
Allfactordata
rule_uscovidwithTimenew <- read.csv("~/Desktop/daidai final/Final/rule_uscovidwithTime copy.csv")
Allfactordata<- na.omit(rule_uscovidwithTimenew)
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
Allfactordata$Grubhub.bracket <- as.factor(Allfactordata$Grubhub.bracket)
Allfactordata$AMC.bracket <- as.factor(Allfactordata$AMC.bracket)
Allfactordata$Zoom.bracket <- as.factor(Allfactordata$Zoom.bracket)
rule_uscovidwithTimenew <- read.csv("~/Desktop/daidai final/Final/rule_uscovidwithTime copy.csv")
Allfactordata<- na.omit(rule_uscovidwithTimenew)
Allfactordata$dailyLevel.bracket <- as.factor(Allfactordata$dailyLevel.bracket)
Allfactordata$fatalityLevel.bracket <- as.factor(Allfactordata$fatalityLevel.bracket)
Allfactordata$positiveLevel.bracket <- as.factor(Allfactordata$positiveLevel.bracket)
Allfactordata$recoveryLevel.bracket <- as.factor(Allfactordata$recoveryLevel.bracket)
Allfactordata$LasVegas.bracket <- as.factor(Allfactordata$LasVegas.bracket)
Allfactordata$Grubhub.bracket <- as.factor(Allfactordata$Grubhub.bracket)
Allfactordata$AMC.bracket <- as.factor(Allfactordata$AMC.bracket)
Allfactordata$Zoom.bracket <- as.factor(Allfactordata$Zoom.bracket)
Allfactordata
all_rules<- apriori(Allfactordata, parameter = list(support = 0.01, confidence = 0.5))
control_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (lhs=c("dailyLevel.bracket=good","fatalityLevel.bracket=low","positiveLevel.bracket=low","recoveryLevel.bracket=high")))
AMC_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="AMC.bracket=high"))
LasVegas_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="LasVegas.bracket=high"))
Grubhub_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="Grubhub.bracket=high"))
Zoom_good <- apriori(data=Allfactordata, parameter=list (supp=0.01,conf = 0.8), appearance = list (rhs="Zoom.bracket=high"))
inspect(head(sort(control_good, by = "support"), 3))
inspect(head(sort(AMC_good, by = "support"), 3))
inspect(head(sort(LasVegas_good, by = "support"), 3))
inspect(head(sort(Grubhub_good, by = "support"), 3))
inspect(head(sort(Zoom_good, by = "support"), 3))
inspect(head(sort(control_good, by = "support"), 3))
#inspect(head(sort(AMC_good, by = "support"), 3))
#inspect(head(sort(LasVegas_good, by = "support"), 3))
#inspect(head(sort(Grubhub_good, by = "support"), 3))
#inspect(head(sort(Zoom_good, by = "support"), 3))
inspect(head(sort(control_good, by = "support"), 3))
inspect(head(sort(AMC_good, by = "support"), 3))
#inspect(head(sort(LasVegas_good, by = "support"), 3))
#inspect(head(sort(Grubhub_good, by = "support"), 3))
#inspect(head(sort(Zoom_good, by = "support"), 3))
#inspect(head(sort(control_good, by = "support"), 3))
inspect(head(sort(AMC_good, by = "support"), 3))
#inspect(head(sort(LasVegas_good, by = "support"), 3))
#inspect(head(sort(Grubhub_good, by = "support"), 3))
#inspect(head(sort(Zoom_good, by = "support"), 3))
#inspect(head(sort(control_good, by = "support"), 3))
#inspect(head(sort(AMC_good, by = "support"), 3))
inspect(head(sort(LasVegas_good, by = "support"), 3))
#inspect(head(sort(Grubhub_good, by = "support"), 3))
#inspect(head(sort(Zoom_good, by = "support"), 3))
#inspect(head(sort(control_good, by = "support"), 3))
#inspect(head(sort(AMC_good, by = "support"), 3))
#inspect(head(sort(LasVegas_good, by = "support"), 3))
inspect(head(sort(Grubhub_good, by = "support"), 3))
#inspect(head(sort(Zoom_good, by = "support"), 3))
#inspect(head(sort(control_good, by = "support"), 3))
#inspect(head(sort(AMC_good, by = "support"), 3))
#inspect(head(sort(LasVegas_good, by = "support"), 3))
#inspect(head(sort(Grubhub_good, by = "support"), 3))
inspect(head(sort(Zoom_good, by = "support"), 3))
inspect(head(sort(control_good, by = "support"), 3))
inspect(head(sort(AMC_good, by = "support"), 3))
inspect(head(sort(LasVegas_good, by = "support"), 3))
inspect(head(sort(Grubhub_good, by = "support"), 3))
inspect(head(sort(Zoom_good, by = "support"), 3))
grid.arrange(AMC_graph, Grubhub_graph,LasVegas_graph,zoom_graph)
grid.arrange(fatalityRate_graph, positiveRate_graph,recoveryRate_graph)
